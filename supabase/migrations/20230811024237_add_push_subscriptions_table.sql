create table "public"."push_subscriptions" (
    "id" bigint generated by default as identity not null,
    "endpoint" text not null,
    "user_id" uuid not null,
    "push_subscription" jsonb not null
);


alter table "public"."push_subscriptions" enable row level security;

CREATE UNIQUE INDEX push_subscriptions_endpoint_key ON public.push_subscriptions USING btree (endpoint);

CREATE UNIQUE INDEX push_subscriptions_pkey ON public.push_subscriptions USING btree (id);

alter table "public"."push_subscriptions" add constraint "push_subscriptions_pkey" PRIMARY KEY using index "push_subscriptions_pkey";

alter table "public"."push_subscriptions" add constraint "push_subscriptions_endpoint_key" UNIQUE using index "push_subscriptions_endpoint_key";

alter table "public"."push_subscriptions" add constraint "push_subscriptions_user_id_fkey" FOREIGN KEY (user_id) REFERENCES identity_data(id) ON DELETE CASCADE not valid;

alter table "public"."push_subscriptions" validate constraint "push_subscriptions_user_id_fkey";

create policy "Users can create push subscriptions for themselves"
on "public"."push_subscriptions"
as permissive
for insert
to public
with check ((auth.uid() = user_id));
