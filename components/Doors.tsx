import { defaultDoorImages } from "./DoorSelector";

const WORKER_URL = process.env.NEXT_PUBLIC_WORKER_URL as string;

const OuterFrameClipPath = (props: { small?: boolean }) => {
  return (
    <>
      {props.small ? (
        <clipPath id="small-outer-frame">
          <path d="M177.36,67.83c-41-5.68-81.6,42.82-90.68,108.33-6.57,47.41,5.18,90.73,27.71,113.21.53.09,1.07.18,1.61.25,41,5.69,81.61-42.82,90.68-108.33,6.57-47.41-5.17-90.73-27.7-113.21C178.44,68,177.91,67.9,177.36,67.83Z" />
        </clipPath>
      ) : (
        <clipPath id="large-outer-frame">
          <path d="M58.67,521.92,227,427.57V119.84c0-27.47-13.1-70.32-57.88-65.3-50.79,5.7-111,78.77-110.91,165.32C58.32,295,58.67,521.92,58.67,521.92Z" />
        </clipPath>
      )}
    </>
  );
};

export const DoorImage = (props: {
  image?: string | null;
  default_space_image?: string | null;
  display_name?: string | null;
  width?: string;
  glow?: boolean;
  small?: boolean;
}) => {
  let image = props.image
    ? `${WORKER_URL}/static/${props.image}`
    : props.default_space_image
    ? props.default_space_image
    : "/doors/door-clouds-256.jpg";
  let light = "#ffec96";
  let medium = "#ffd700";
  let dark = "#daa520";

  return (
    <svg
      role="img"
      aria-labelledby="titleid"
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || "128"}
      viewBox={props.small ? " 0 0 256 330" : "0 0 256 576"}
      className="flex-none"
      filter={props?.glow ? "url(#softGlow)" : ""}
      overflow="visible"
    >
      <defs>
        <>
          <style>
            {`.cls-1{fill:`}
            {light}
            {`;} .cls-2{fill:`}
            {medium}
            {`;} .cls-3{fill:`}
            {dark}
            {`;} .cls-4{fill:white;}`}
          </style>
          <OuterFrameClipPath small={props.small} />

          {SoftGlowFilter}
        </>
      </defs>

      {/* TODO: fix issue where we see all default images while loading? */}

      <g
        width="100%"
        height="100%"
        clipPath={`${
          props.small ? "url(#small-outer-frame)" : "url(#large-outer-frame)"
        } `}
        fill="transparent"
      >
        <image
          width="100%"
          height="100%"
          preserveAspectRatio="xMidYMid slice"
          xlinkHref={image}
        />
      </g>
      {props.small ? (
        <>
          {/* SMALL DOOR FRAME SVG */}

          <path
            className="cls-1"
            d="M179.58,68.08c22.53,22.48,34.27,65.8,27.7,113.21-9.07,65.51-49.67,114-90.68,108.33-.54-.07-1.08-.16-1.61-.25,8.6,8.58,18.77,14.13,30.1,15.7,41,5.68,81.6-42.82,90.68-108.33C244.73,132.09,219.65,75,179.58,68.08Z"
          />
          <path
            className="cls-3"
            d="M198.3,45.46l-7.89-6.66c-11.77-5.2-22.56-6.9-33.16-8.27-53.76-7-106.37,48.14-117.62,129.35-9.27,66.92,12.46,127.49,50.43,150.9h0l.63.37.56.34,29.68,14,7.22-26.13c-30.87-17-48.61-67.28-40.86-123.21C96.36,110.65,137,62.15,178,67.83a48.13,48.13,0,0,1,13.11,3.77Z"
          />
          <path
            className="cls-3"
            d="M179.58,68.08A87.51,87.51,0,0,1,198.3,97c23.4,6.44,37.2,40.9,39.09,82.09C240,122,216,74.4,179.58,68.08Z"
          />
          <path
            className="cls-2"
            d="M177.42,35.63C123.73,28.19,71.09,88,59.83,169.21S83,322.29,136.67,329.72,243,277.36,254.26,196.15,231.11,43.07,177.42,35.63Zm58.35,161.11c-9.08,65.51-49.67,114-90.68,108.33s-66.88-63.4-57.81-128.91S137,62.15,178,67.83,244.85,131.22,235.77,196.74Z"
          />
        </>
      ) : (
        <>
          {/* BIG DOOR FRAME SVG */}
          <path
            className="cls-2"
            d="M199,56.59,195.58,56c-8.52-1.08-18.47.22-29.9,4.71C99.75,86.58,70.05,154.55,70.05,205.26V525.81L96.6,510.54l138.75-79.78V173.12s.05-1.65,0-4.59V112.7c0-24.62-11.56-50.88-36.31-56.11m56.31,56.11V442.33L50.05,560.38V205.26A180.68,180.68,0,0,1,84,99.78c32.44-45.48,76.84-64.13,105.8-64.13a64.6,64.6,0,0,1,15,1.71,104.81,104.81,0,0,1,14.41,5.51C243,55.83,255.35,84.4,255.35,112.7Z"
          />
          <path
            className="cls-1"
            d="M235.35,173.12V430.76L96.6,510.54l-26.55-5.28V494.69l93.7-53.88a1,1,0,0,0,.55,1.83,1,1,0,0,0,.5-.13L209,417.12a1,1,0,0,0,.5-.87V93.5c0-18.44-4.85-29-8.47-34.37,31.07,32.59,34.14,92.45,34.37,109.4Z"
          />
          <path
            className="cls-4"
            d="M207.47,97.67V92.92c0-14.46-3-23.73-6-29.36-.27-.52-.55-1-.82-1.45-.08-.15-.18-.3-.27-.45l-.27-.43c-.45-.71-.9-1.34-1.32-1.89-.17-.23-.34-.44-.51-.64s-.25-.31-.37-.45-.23-.28-.35-.4c-.32-.37-.62-.67-.88-.93s-.66-.64-.93-.89c.88.11,2.48.39,3.33.56A23.33,23.33,0,0,1,201,59.12s0,0,0,0c3.62,5.33,8.47,15.93,8.47,34.37V416.25a1,1,0,0,1-.5.87L164.8,442.51a1,1,0,0,1-1.37-.37,1,1,0,0,1,.32-1.33l43.72-25.14Z"
          />
          <path
            className="cls-3"
            d="M235.35,112.7v55.83c-.23-16.95-3.3-76.81-34.37-109.4,0,0,0,0,0,0A27.69,27.69,0,0,0,199,56.59C223.79,61.82,235.35,88.08,235.35,112.7ZM229.12,427a1,1,0,0,0,.45,1.34l0,0a1,1,0,0,0,.43.1,1,1,0,0,0,.89-.56,1,1,0,0,0-1.81-.9Zm-4.36-3.45a1,1,0,0,0-.93,1.77l2.22,1.16a1,1,0,0,0,.46.11,1,1,0,0,0,.89-.54,1,1,0,0,0-.42-1.34Zm-13.46-7a1,1,0,1,0-.93,1.77l9,4.7a.93.93,0,0,0,.46.12,1,1,0,0,0,.46-1.89ZM52.27,119c-16.61,36.6-16.91,65.77-16.91,77.52V551.68l14.69,8.7V205.26A180.68,180.68,0,0,1,84,99.78c32.44-45.48,76.84-64.13,105.8-64.13a64.6,64.6,0,0,1,15,1.71c-11.72-3.74-27-7.41-37.1-7.42C129.12,29.91,78.87,60.41,52.27,119ZM70.05,505.26v20.55L96.6,510.54Z"
          />
        </>
      )}
    </svg>
  );
};

{
  /* GLOW EFFECT */
}
{
  /* reference: https://codepen.io/dipscom/pen/mVYjPw */
}
{
  /* alt example: https://stackoverflow.com/questions/54112231/is-it-possible-to-create-a-glow-effect-in-svg */
}
const SoftGlowFilter = (
  <filter id="softGlow" height="200%" width="200%" x="-50%" y="-50%">
    {/* <!-- Thicken out the original shape --> */}
    <feMorphology
      operator="dilate"
      radius="4"
      in="SourceAlpha"
      result="thicken"
    />
    {/* <!-- Use a gaussian blur to create the soft blurriness of the glow --> */}
    <feGaussianBlur in="thicken" stdDeviation="16" result="blurred" />
    {/* <!-- Change the colour --> */}
    <feFlood floodColor="#ffd700" result="glowColor" />
    {/* <!-- Color in the glows --> */}
    <feComposite
      in="glowColor"
      in2="blurred"
      operator="in"
      result="softGlow_colored"
    />
    {/* <!--	Layer the effects together --> */}
    <feMerge>
      <feMergeNode in="softGlow_colored" />
      <feMergeNode in="SourceGraphic" />
    </feMerge>
  </filter>
);

export const DoorClippedImage = (props: { url: string; width?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || "128"}
      height="auto"
      viewBox="0 0 256 576"
      className="flex-none"
      overflow="visible"
    >
      <defs>
        <OuterFrameClipPath small={false} />
      </defs>

      <image
        width="100%"
        height="100%"
        preserveAspectRatio="xMinYMin slice"
        xlinkHref={props.url}
        clipPath="url(#large-outer-frame)"
      />
    </svg>
  );
};

export const EmptyDoor = (props: { width?: string }) => {
  return (
    <svg
      width={props.width || "128"}
      height="auto"
      viewBox="0 0 256 576"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M62.1 142.4C60.9 145.5 59.8 148.6 58.8 151.8C58.3 153.3 56.9 154.2 55.5 154.2C55.1 154.2 54.8 154.1 54.4 154C52.6 153.4 51.5 151.4 52.1 149.6C53.1 146.3 54.3 143.1 55.5 139.9C56.2 138.1 58.2 137.2 60 137.9C61.8 138.6 62.8 140.6 62.1 142.4ZM51.8 164C49.9 163.6 48 164.8 47.6 166.7C46.1 173.9 44.9 181.3 44.3 188.8C44.3 188.9 44.3 188.9 44.3 189C43.9 193.4 43.7 197.9 43.6 202.4C43.6 203.1 43.6 203.8 43.6 204.6C43.6 204.6 43.6 204.6 43.6 204.7V204.8C43.6 204.8 43.6 204.8 43.6 204.9V224.6C43.6 226.5 45.2 228.1 47.1 228.1C49 228.1 50.6 226.5 50.6 224.6V204.9C50.6 204.9 50.6 204.9 50.6 204.8V204.7C50.6 204.7 50.6 204.7 50.6 204.6C50.6 204 50.6 203.4 50.6 202.8C50.6 202.8 50.6 202.8 50.6 202.7C50.6 202.7 50.6 202.7 50.6 202.6C50.8 190.9 52.1 179.4 54.5 168.1C54.9 166.3 53.6 164.4 51.8 164ZM232.4 356.7C230.5 356.7 228.9 358.3 228.9 360.2V373.4C228.9 375.3 230.5 376.9 232.4 376.9C234.3 376.9 235.9 375.3 235.9 373.4V360.2C235.9 358.3 234.3 356.7 232.4 356.7ZM235.9 112.7V168.5C235.9 171.2 235.9 172.8 235.9 173.1V336.6C235.9 338.5 234.3 340.1 232.4 340.1C230.5 340.1 228.9 338.5 228.9 336.6V173.1V173C228.9 173 228.9 171.4 228.9 168.6V112.7C228.9 93 221.1 71.6 203.9 63C207.7 70.7 210 81.4 210 93.5V414.2L228.9 424.8V383.7C228.9 381.8 230.5 380.2 232.4 380.2C234.3 380.2 235.9 381.8 235.9 383.7V430.8C235.9 430.9 235.9 431 235.9 431.1V431.2C235.9 431.4 235.8 431.6 235.8 431.8V431.9C235.7 432.1 235.7 432.3 235.6 432.4C235.6 432.4 235.6 432.4 235.6 432.5C235.5 432.6 235.5 432.7 235.4 432.8L235.3 432.9C235.2 433 235.2 433 235.1 433.1C234.8 433.4 234.6 433.6 234.2 433.8L68.9 528.8C68.4 529.1 67.8 529.3 67.2 529.3C66.6 529.3 66 529.1 65.4 528.8C64.3 528.2 63.7 527 63.7 525.8V205.3C63.7 152.6 94.3 83.9 161.6 57.5C173 53 183.6 51.4 193.2 52.6C194.1 52.7 195.9 53 196.7 53.2C196.8 53.2 196.9 53.2 197 53.2C223.8 58.9 235.9 87.2 235.9 112.7ZM70.6 488.7L203 414.2V93.5C203 76.1 197.9 63.5 192.7 59.6C192.5 59.6 192.3 59.5 192.2 59.5C183.8 58.4 174.3 60 164 64C134.6 75.5 110.1 96.8 93.2 125.5C78.8 149.9 70.6 178.9 70.6 205.3V488.7ZM70.6 519.8L225.3 430.8L206.5 420.3L70.6 496.7V519.8ZM255.9 112.7V442.3C255.9 443.6 255.2 444.7 254.1 445.3L48.9 563.3C48.4 563.6 47.8 563.8 47.1 563.8C46.4 563.8 45.8 563.6 45.3 563.3L30.7 554.6C29.6 554 29 552.8 29 551.6V196.5C29 185.3 29 155.5 46.2 117.5C58.9 89.6 77.7 66.1 100.6 49.6C121.3 34.6 144.2 26.4 164.8 26.4C164.8 26.4 164.8 26.4 164.9 26.4C178.3 26.4 197.5 32.2 203 34C209.4 36.1 214.9 38.1 218 39.7C241.3 52.5 255.9 80.5 255.9 112.7ZM248.9 112.7C248.9 83.5 235.4 57.3 214.6 45.9C212 44.5 206.9 42.6 200.9 40.7C196.5 39.6 191.7 39.1 186.8 39.1C146.6 39.1 106.1 70.6 83.8 101.8C77 111.4 71 121.7 66.2 132.3C65.4 134.1 63.3 134.8 61.6 134C59.8 133.2 59.1 131.1 59.9 129.4C64.9 118.3 71.1 107.6 78.2 97.7C93.3 76.5 112.4 59.2 133.6 47.5C145.9 40.7 158.6 36 170.6 33.7C168.5 33.5 166.6 33.4 164.8 33.4C164.8 33.4 164.8 33.4 164.7 33.4C129.7 33.4 79.6 60.6 52.5 120.4C35.9 157 35.9 185.7 35.9 196.5V549.6L43.6 554.2V244.2C43.6 242.3 45.2 240.7 47.1 240.7C49 240.7 50.6 242.3 50.6 244.2V554.2L248.9 440.2V112.7ZM159.5 284.1C153.7 315.8 135.5 339 118.8 335.9C102.1 332.9 93.2 304.7 99 273.1C104.8 241.4 123 218.2 139.7 221.3C156.4 224.3 165.2 252.5 159.5 284.1ZM153.9 267.8C152.7 265.3 149.8 264.2 147.3 265.3L136.3 270.3L138.5 249.7C138.8 247 136.8 244.5 134.1 244.2C131.4 243.9 128.9 245.9 128.6 248.6L125.7 275.2L109.3 282.7C106.8 283.9 105.7 286.8 106.8 289.3C107.6 291 109.1 292 110.8 292.2C111.7 292.3 112.6 292.2 113.4 291.8L124.4 286.8L122.2 307.4C121.9 310.1 123.9 312.6 126.6 312.9C129.3 313.2 131.8 311.2 132.1 308.5L135 281.9L151.4 274.4C154 273.3 155.1 270.3 153.9 267.8Z"
        fill="currentColor"
      />
    </svg>
  );
};
